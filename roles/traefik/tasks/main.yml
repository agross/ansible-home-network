- name: Generate htpasswd-compatible Traefik dashboard users
  ansible.builtin.import_tasks:
    file: htpasswd-users.yml
  vars:
    users: "{{ traefik_users.dashboard }}"
    fact: traefik_dashboard_users

- name: Copy templates
  ansible.builtin.import_tasks:
    file: copy-templates.yml
  vars:
    directory: ../templates
    target: "{{ traefik_root }}"
    notify_: Restart traefik service
    files:
      systemd/traefik.service.j2:
        mode: "600"
      conf.d/traefik/dashboard.yaml.j2:
        mode: "600"

- name: Copy templates for {{ inventory_hostname }}
  ansible.builtin.import_tasks:
    file: copy-templates.yml
  vars:
    directory: "templates/{{ ansible_role_name }}/{{ inventory_hostname }}"
    target: "{{ traefik_dynamic_file_configuration }}"

- name: Install Traefik using docker compose
  when: traefik_install_method == 'docker'
  ansible.builtin.include_tasks:
    file: install-docker.yml

- name: Install Traefik using package manager
  when: traefik_install_method == 'bare-metal'
  ansible.builtin.include_tasks:
    file: install-bare-metal.yml

- name: Install systemd units
  ansible.builtin.import_tasks:
    file: systemd-install-units.yml
  vars:
    directory: "{{ traefik_root }}/systemd"
    local_units: templates/systemd
    notify_: Restart traefik service

- name: Start systemd units
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: true
    daemon_reload: true
  loop: "{{ systemd_units_autostart }}"
  register: traefik_started

- name: Allow Traefik services through firewall
  when: interfaces.lan.zone is defined
  ansible.posix.firewalld:
    service: "{{ item }}"
    zone: "{{ interfaces.lan.zone }}"
    immediate: true
    permanent: true
    state: enabled
  loop: "{{ traefik_firewalld_services }}"

- name: Allow Traefik ports through firewall
  when: interfaces.lan.zone is defined
  ansible.posix.firewalld:
    port: "{{ item }}"
    zone: "{{ interfaces.lan.zone }}"
    immediate: true
    permanent: true
    state: enabled
  loop: "{{ traefik_firewalld_ports }}"

- name: Register Prometheus scrape
  ansible.builtin.import_tasks:
    file: register-prometheus-scrape.yml
  vars:
    app: "{{ ansible_role_name }}"
    scrapes:
      - "{{ ansible_hostname }}:8080"
