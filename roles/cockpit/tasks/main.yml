- name: Install cockpit (dnf)
  when: ansible_pkg_mgr is ansible.builtin.match('dnf')
  ansible.builtin.dnf:
    name:
      - cockpit
      - cockpit-selinux
      - pcp
    state: present

- name: Install cockpit (apt)
  when: ansible_pkg_mgr == 'apt'
  ansible.builtin.apt:
    name:
      - cockpit
      - cockpit-packagekit
      - cockpit-pcp # Deprecated for future versions.
      - cockpit-storaged
    state: present
    install_recommends: false

- name: Start and enable pmlogger.service for pcp
  ansible.builtin.systemd:
    service: pmlogger.service
    state: started
    enabled: true

- name: Configure bastion host
  when: cockpit | default('') == 'bastion'
  block:
    - name: Enable and start cockpit socket
      ansible.builtin.systemd:
        unit: cockpit.socket
        state: started
        enabled: true

    # https://github.com/cockpit-project/cockpit/wiki/Proxying-Cockpit-over-nginx
    - name: Make cockpit proxy-aware
      ansible.builtin.template:
        src: cockpit.conf.j2
        dest: /etc/cockpit/cockpit.conf
        owner: 0
        group: 0
        mode: "644"

    # Since cockpit starts an SSH agent and calls ssh-add without arguments,
    # this key will be loaded automatically and can be used to access
    # remote cockpit instances. Key files with different names would have to
    # be enabled on the cockpit UI first (after every login).
    # https://cockpit-project.org/guide/latest/authentication.html#public-key
    #
    # A password may be added to the private key using the cockpit UI,
    # but then running this module again will fail which is why we check for
    # this case in failed_when.
    - name: Set SSH key to connect to proxied hosts
      ansible.builtin.copy:
        dest: >-
          /home/{{ ansible_env.SUDO_USER | default(ansible_user_id) }}/.ssh/id_{{ cockpit_ssh_key_type }}
        content: "{{ cockpit_ssh_private_key }}"
        mode: "600"
        owner: "{{ ansible_env.SUDO_USER | default(ansible_user_id) }}"
        group: "{{ ansible_env.SUDO_USER | default(ansible_user_id) }}"

    - name: Configure proxied hosts
      ansible.builtin.template:
        src: machines.json.j2
        dest: /etc/cockpit/machines.d/machines.json
        owner: 0
        group: 0
        mode: "644"

- name: Authorize SSH key on proxied hosts
  when: >-
    cockpit | default('') != 'bastion' and
    cockpit_ssh_public_key is defined
  ansible.posix.authorized_key:
    user: "{{ ansible_env.SUDO_USER | default(ansible_user_id) }}"
    key: "{{ cockpit_ssh_public_key }}"

- name: Make cockpit available through Traefik
  when: >-
    cockpit | default('') == 'bastion' and
    traefik_host and
    traefik_dynamic_file_configuration is defined
  block:
    - name: Ensure Traefik configuration directory exists
      ansible.builtin.file:
        path: "{{ traefik_dynamic_file_configuration }}"
        state: directory
        owner: 0
        group: 0
        mode: "755"

    - name: Copy dynamic Traefik configuration file
      ansible.builtin.template:
        src: cockpit.yaml.j2
        dest: "{{ traefik_dynamic_file_configuration }}/cockpit.yaml"
        owner: 0
        group: 0
        mode: "644"
