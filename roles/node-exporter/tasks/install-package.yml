- name: Install exporter role
  ansible.builtin.include_role:
    name: "{{ item.role }}"
  loop: "{{ node_exporter_roles }}"
  loop_control:
    label: "{{ item.role }}"

- name: Get Proxmox node info
  ansible.builtin.stat:
    path: "/etc/pve/nodes/{{ ansible_facts.hostname }}"
  register: proxmox_node_info

# Templating need to be separate because the PVE file system does not handle
# atomic moves.
- name: Ensure Proxmox host firewall config file exists
  when: proxmox_node_info.stat.exists
  ansible.builtin.file:
    path: "{{ proxmox_node_info.stat.path }}/host.fw"
    state: touch
    access_time: preserve
    modification_time: preserve
    owner: 0
    group: 33
    mode: "640"

- name: Allow exporter ports through Proxmox firewall
  when: proxmox_node_info.stat.exists
  ansible.builtin.template:
    src: proxmox/host.fw.j2
    dest: "{{ proxmox_node_info.stat.path }}/host.fw"
    owner: 0
    group: 33
    mode: "640"

- name: Get firewalld info
  ansible.posix.firewalld_info:
  register: firewalld_info
  failed_when: false

- name: Allow exporter through firewalld
  when: >-
    'firewalld_info' in firewalld_info
  block:
    - name: Template firewalld service
      when: template | length > 0
      ansible.builtin.template:
        src: "{{ template }}"
        dest: "/etc/firewalld/services/{{ item }}.xml"
        lstrip_blocks: true
        owner: 0
        group: 0
        mode: "644"
      loop: >-
        {{
          node_exporter_roles |
          selectattr('firewalld_service', 'defined') |
          map(attribute = 'firewalld_service')
        }}
      loop_control:
        label: "firewalld_service={{ item }}"
      vars:
        files:
          - "{{ item }}.xml.j2"
          - "{{ item }}.xml"
        paths:
          - ../templates/firewalld
        template: >-
          {{
            lookup('ansible.builtin.first_found', paths=paths, files=files, skip=true)
          }}
      notify: Reload firewalld

    - name: Reload firewalld if required
      ansible.builtin.meta: flush_handlers

    - name: Allow exporter service through firewalld
      ansible.posix.firewalld:
        service: "{{ item.firewalld_service }}"
        zone: >-
          {{
            interfaces.lan.zone |
            default(firewalld_info.firewalld_info.default_zone)
          }}
        immediate: true
        permanent: true
        state: enabled
      loop: >-
        {{
          node_exporter_roles | selectattr('firewalld_service', 'defined')
        }}
      loop_control:
        label: "firewalld_service={{ item.firewalld_service }}"

    - name: Allow exporter port through firewalld
      ansible.posix.firewalld:
        port: "{{ item.port }}"
        zone: >-
          {{
            interfaces.lan.zone |
            default(firewalld_info.firewalld_info.default_zone)
          }}
        immediate: true
        permanent: true
        state: enabled
      loop: >-
        {{
          node_exporter_roles | rejectattr('firewalld_service', 'defined')
        }}
      loop_control:
        label: "port={{ item.port }}"
