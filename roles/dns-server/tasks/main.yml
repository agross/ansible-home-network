- name: Copy default templates
  ansible.builtin.import_tasks: copy-templates.yml
  vars:
    directory: ../templates/_
    notify: Restart dns-server service

- name: Copy templates for {{ inventory_hostname }}
  ansible.builtin.import_tasks: copy-templates.yml
  vars:
    directory: "../templates/{{ inventory_hostname }}"
    notify: Restart dns-server service

- name: Install systemd units
  ansible.builtin.import_tasks: systemd-install-units.yml
  vars:
    directory: "{{ root }}/systemd"
    local_units: templates/_/systemd
    notify: Restart dns-server service

- name: Copy systemd-resolved config files
  ansible.builtin.import_tasks: copy-templates.yml
  vars:
    directory: ../templates/_/systemd-resolved/resolved.conf.d
    target: /etc/systemd/resolved.conf.d
    notify: Restart systemd-resolved service

- name: Start systemd-resolved
  ansible.builtin.systemd:
    name: systemd-resolved
    state: started
    enabled: true
  register: systemd_resolved_started

- name: Create dnsmasq.leases unless it exists
  ansible.builtin.file:
    path: "{{ root }}/dnsmasq/dnsmasq.leases"
    state: touch
    access_time: preserve
    modification_time: preserve
    owner: 10000
    group: 0
    mode: '664'
  notify: Restart dns-server service

- name: Change ownership of dnscrypt-proxy directory to nobody:nogroup
  ansible.builtin.file:
    path: "{{ root }}/dnscrypt-proxy"
    owner: 65534
    group: 65533
    recurse: true
  notify: Restart dns-server service

- name: Allow DHCP and DNS-related services from internal network
  ansible.posix.firewalld:
    zone: internal
    service: "{{ item }}"
    immediate: true
    permanent: true
    state: enabled
  loop:
    - dhcp
    - dhcpv6
    - dns
    - tftp

- name: Update docker-compose images
  ansible.builtin.import_tasks: docker-compose-update.yml
  vars:
    directory: "{{ root }}"
    pull: "{{ docker_update is defined }}"
    build: "{{ docker_update is defined }}"
    notify:
      - Restart dns-server service

- name: Start systemd units
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: true
    daemon_reload: true
  loop: "{{ systemd_units_autostart }}"
  register: dns_server_started

- name: Install DNS utils
  ansible.builtin.package:
    name: bind-utils
    state: present
