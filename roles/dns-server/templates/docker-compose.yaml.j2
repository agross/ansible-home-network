version: '2.4'

services:
  # Primary, ad-blocking DNS with a nice UI. Uses dnsmasq as the only upstream.
  adguard:
    image: adguard/adguardhome:edge
    restart: unless-stopped
    # Publishing ports would publish them globally via docker's firewalld support,
    # but only on IPv4.
    # Host networking follows firewalld rules and enables IPv4 and IPv6.
    network_mode: host
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./adguard/work:/opt/adguardhome/work
      - ./adguard/conf:/opt/adguardhome/conf
      - ./adguard/healthcheck:/opt/adguardhome/healthcheck:ro
    healthcheck:
      test: ["CMD", "/opt/adguardhome/healthcheck"]
      start_period: 5s

  # DHCP + DNS (127.0.0.1:53000/udp) with information about DHCP hosts. Uses
  # dnscrypt-proxy as the only upstream.
  dnsmasq:
    image: ricardbejarano/dnsmasq:custom
    build:
      context: ./dnsmasq
    command: --no-daemon --conf-file=/etc/dnsmasq.conf
    # Required for DHCP.
    network_mode: host
    restart: unless-stopped
    cap_add:
      - CAP_NET_BIND_SERVICE # Binding to TCP/UDP sockets below 1024.
      - CAP_NET_RAW # Use raw and packet sockets (needed for handling DHCPv6 requests).
      - NET_ADMIN # Modify routing tables and other network-related operations.
    volumes:
      - ./dnsmasq/dnsmasq.conf:/etc/dnsmasq.conf:ro
      - ./dnsmasq/dnsmasq.conf.d:/etc/dnsmasq.conf.d:ro
      - ./dnsmasq/dnsmasq.leases:/var/lib/misc/dnsmasq.leases
      - /tftpboot:/tftpboot:ro
    depends_on:
      - adguard
      - dnscrypt-proxy

  # Outbound DNS server (127.0.0.1:53001/udp).
  dnscrypt-proxy:
    image: klutchell/dnscrypt-proxy
    restart: unless-stopped
    ports:
      - '127.0.0.1:53001:5053/udp'
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./dnscrypt-proxy:/config
