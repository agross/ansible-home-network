volumes:
  adguard-data:

services:
  # Primary, ad-blocking DNS with a nice UI. Uses dnsmasq as the only upstream.
  adguard:
    image: adguard/adguardhome:latest
    restart: unless-stopped
    labels:
      traefik.enable: 'true'
      traefik.http.routers.adguard.entrypoints: https
      traefik.http.routers.adguard.rule: Host(`adguard.{{ network.domain | mandatory }}`)
      traefik.http.services.adguard.loadbalancer.server.port: 30000
    # Such that AdGuard logs real IP addresses instead of the proxied docker
    # address and to be able to talk to dnsmasq which also runs on the host
    # network.
    network_mode: host
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - adguard-data:/opt/adguardhome/work
      - ./adguard/conf:/opt/adguardhome/conf
      - ./adguard/healthcheck:/opt/adguardhome/healthcheck:ro
    healthcheck:
      test:
        - CMD
        - /opt/adguardhome/healthcheck
      start_period: 5s
      interval: 5s
    depends_on:
      - dnsmasq

  # DHCP + DNS (127.0.0.1:{{ dns_server_ports.dnsmasq | mandatory }}/udp) with information about DHCP hosts. Uses
  # Uses dnscrypt-proxy as its upstream.
  dnsmasq:
    image: ricardbejarano/dnsmasq:latest
    command: --keep-in-foreground --pid-file --log-facility=- --conf-file=/etc/dnsmasq.conf
    # Required for DHCP.
    user: 0:0
    # Required for DHCP.
    network_mode: host
    restart: unless-stopped
    cap_add:
      - NET_BIND_SERVICE # Binding to TCP/UDP sockets below 1024.
      - NET_RAW # Use raw and packet sockets (needed for handling DHCPv6 requests).
      - NET_ADMIN # Modify routing tables and other network-related operations.
    volumes:
      - ./dnsmasq/dnsmasq.conf:/etc/dnsmasq.conf:ro
      - ./dnsmasq/conf.d:/etc/dnsmasq.conf.d:ro
      - ./dnsmasq/dnsmasq.leases:/var/lib/misc/dnsmasq.leases
    depends_on:
      - dnscrypt-proxy

  # Outbound DNS server (127.0.0.1:{{ dns_server_ports.dnscrypt | mandatory }}/udp).
  dnscrypt-proxy:
    image: klutchell/dnscrypt-proxy
    restart: unless-stopped
    ports:
      # Bound to localhost such that dnsmasq which runs on the host network can
      # access it.
      - '127.0.0.1:{{ dns_server_ports.dnscrypt | mandatory }}:5053/udp'
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./dnscrypt-proxy:/config
    healthcheck:
      test:
        - CMD
        - dnsprobe
        - example.com
        - localhost:5053
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
