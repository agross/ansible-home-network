#!/usr/bin/env bash

set -euo pipefail

green='\e[1;32m'
yellow='\e[1;33m'
blue='\e[1;34m'
reset='\e[0m'

get-downloaded-base-image() {
  local image names digests parent

  image="${1?Need image}"

  {% raw %}
  names=("$(docker image inspect \
                        --format '{{ range .RepoTags }}{{ printf "%s\n" . }}{{ end }}' \
                        "$image")")

  digests=("$(docker image inspect \
                           --format '{{ range .RepoDigests }}{{ printf "%s\n" . }}{{ end }}' \
                           "$image")")
  {% endraw %}

  if [[ -z "${digests[0]}" ]]; then
    {% raw %}
    parent="$(docker image inspect --format '{{ .Parent }}' "$image" )"
    {% endraw %}

    if [[ -z "$parent" ]]; then
      >&2 printf '%b%s%b is a local image but has no parent\n' \
               "$green" \
               "${names[0]:-$image}" \
               "$reset"

      return 1
    fi

    >&2 printf '%b%s%b is a local image, inspecting parent %b%s%b\n' \
               "$green" \
               "${names[0]:-$image}" \
               "$reset" \
               "$blue" \
               "$parent" \
               "$reset"

    get-downloaded-base-image "$parent"
    return 0
  fi

  >&2 printf 'Found %b%s%b non-local base image\n' \
             "$green" \
             "${names[0]}" \
             "$reset"

  printf '%s' "${names[0]}"
}

cd "$(dirname "$0")/.."

>&2 printf '%bPulling base images...%b\n' \
           "$yellow" \
           "$reset"
for image in $(docker-compose images --quiet); do
  base_image="$(get-downloaded-base-image "$image")"

  >&2 printf '%bPulling%b %b%s%b...\n' \
             "$yellow" \
             "$reset" \
             "$green" \
             "${base_image}" \
             "$reset"

  docker pull "$base_image"
done

>&2 printf '%bBuilding...%b\n' \
           "$yellow" \
           "$reset"
docker-compose build

>&2 printf '%bRestarting%b %b%s%b...\n' \
           "$yellow" \
           "$reset" \
           "$green" \
           {{ service_name | quote }} \
           "$reset"

systemctl restart {{ service_name | quote }}
