- name: Copy templates
  ansible.builtin.import_tasks: copy-templates.yml
  vars:
    directory: ../templates
    target: "{{ vaultwarden_root }}"
    notify: Restart vaultwarden service # noqa: var-naming[no-reserved]
    files:
      .env.vaultwarden.j2:
        owner: 0
        group: 0
        mode: "600"

- name: Update docker-compose images
  ansible.builtin.import_tasks: docker-compose-update.yml
  vars:
    directory: "{{ vaultwarden_root }}"
    pull: true
    build: true
    notify: Restart vaultwarden service # noqa: var-naming[no-reserved]

- name: Symlink backup configuration
  ansible.builtin.file:
    state: link
    src: "{{ vaultwarden_root }}/backup.yaml"
    path: "/etc/borgmatic.d/{{ ansible_role_name }}.yaml"

- name: Ensure the app data directory exists and is accessible by Vaultwarden
  ansible.builtin.file:
    path: "{{ vaultwarden_root }}/app"
    state: directory
    mode: ug-x,ug=rwX,o-rwx
    owner: "{{ vaultwarden_uid_gid }}"
    group: "{{ vaultwarden_uid_gid }}"
    recurse: true

- name: Install systemd units
  ansible.builtin.import_tasks: systemd-install-units.yml
  vars:
    directory: "{{ vaultwarden_root }}/systemd"
    local_units: templates/systemd
    notify: Restart vaultwarden service # noqa: var-naming[no-reserved]

- name: Start service
  ansible.builtin.systemd:
    state: started
    enabled: true
    name: "{{ item }}"
    daemon_reload: true
  loop: "{{ systemd_units_autostart }}"
  register: vaultwarden_started

- name: Register with loadbalancer
  ansible.builtin.import_tasks:
    file: register-with-loadbalancer.yml
