- name: Add disks to guest VM
  community.proxmox.proxmox_disk:
    api_user: "{{ proxmox_api_user | mandatory }}"
    api_token_id: ansible
    api_token_secret: "{{ proxmox_api_token_secret | mandatory }}"
    api_host: localhost
    vmid: "{{ item.0.kvm.id | mandatory }}"
    storage: "{{ item.1.value.storage }}"
    disk: "{{ item.1.key }}"
    discard: >-
      {{
        (item.1.value.discard | default(false)) is truthy |
        ansible.builtin.ternary('on', 'ignore')
      }}
    iothread: >-
      {{
        (item.1.value.iothread | default(false)) is truthy
      }}
    ssd: >-
      {{
        (item.1.value.ssd | default(false)) is truthy |
        ansible.builtin.ternary(true, omit)
      }}
    backup: >-
      {{
        (item.1.value.backup | default(true)) is truthy |
        ansible.builtin.ternary(omit, false)
      }}
    size: "{{ item.1.value.size }}"
    state: present
  loop: >-
    {{
      disk_guests |
      ansible.builtin.subelements('scsi')
    }}
  loop_control:
    label: >-
      {{ item.0.inventory_hostname }}
      id={{ item.0.kvm.id }}
      device={{ item.1.key }} size={{ item.1.value.size }}G
  vars:
    disk_guests_yaml: |
      {% for guest in guests %}
      - inventory_hostname: {{ guest.inventory_hostname }}
        kvm: {{ guest.kvm }}
        scsi: {{ guest.kvm.scsi | ansible.builtin.dict2items }}
      {% endfor %}
    disk_guests: >-
      {{
        disk_guests_yaml |
        ansible.builtin.from_yaml |
        default([], true) |
        list
      }}

- name: Grow existing disk of guest VM
  community.proxmox.proxmox_disk:
    api_user: "{{ proxmox_api_user | mandatory }}"
    api_token_id: ansible
    api_token_secret: "{{ proxmox_api_token_secret | mandatory }}"
    api_host: localhost
    vmid: "{{ item.0.kvm.id | mandatory }}"
    disk: "{{ item.1.key }}"
    size: "{{ item.1.value.size }}G"
    state: resized
  loop: >-
    {{
      disk_guests |
      ansible.builtin.subelements('scsi')
    }}
  loop_control:
    label: >-
      {{ item.0.inventory_hostname }}
      id={{ item.0.kvm.id }}
      device={{ item.1.key }} size={{ item.1.value.size }}G
  vars:
    disk_guests_yaml: |
      {% for guest in guests %}
      - inventory_hostname: {{ guest.inventory_hostname }}
        kvm: {{ guest.kvm }}
        scsi: {{ guest.kvm.scsi | ansible.builtin.dict2items }}
      {% endfor %}
    disk_guests: >-
      {{
        disk_guests_yaml |
        ansible.builtin.from_yaml |
        default([], true) |
        list
      }}
  register: proxmox_resized_disks

# ansible.builtin.add_host does not use the host loop, so it would only see
# proxmox_resized_disks from the first host in the loop. Hence the involved
# mapping of all hosts' vars in the loop.
#
# https://stackoverflow.com/a/57209874/149264
- name: Remember host with resized disks # noqa: no-handler
  ansible.builtin.add_host:
    group: needs_fs_resize
    name: "{{ item }}"
  changed_when: false
  loop: >-
    {{
      ansible_play_hosts |
      map('ansible.builtin.extract', hostvars, ['proxmox_resized_disks', 'results']) |
      ansible.builtin.flatten |
      selectattr('changed') |
      map(attribute = 'item') |
      map('first') |
      map(attribute = 'inventory_hostname') |
      ansible.builtin.unique
    }}
  loop_control:
    label: "{{ item }}"
