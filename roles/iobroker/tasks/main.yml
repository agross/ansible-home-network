- name: Determine device firmware URL
  ansible.builtin.include_tasks:
    file: zigbee-firmware-url.yml
  loop: >-
    {{
      iobroker_devices |
      selectattr('zigbee.firmware.url', 'defined') |
      map(attribute = 'zigbee.firmware')
    }}

- name: Copy templates
  ansible.builtin.import_tasks:
    file: copy-templates.yml
  vars:
    directory: ../templates
    target: "{{ iobroker_root }}"
    notify: # noqa: var-naming[no-reserved]
      - Restart iobroker service
      - Restart iobroker healthcheck timer
    files:
      backups:
        owner: 1000
        group: 1000
        mode: "755"
      crunchfit/.env.j2:
        mode: "640"

- name: Install SELinux packages
  when: ansible_selinux.status != 'disabled'
  ansible.builtin.package:
    name:
      - python3-policycoreutils
    state: present

- name: Allow execution of the healthcheck script
  when: ansible_selinux.status != 'disabled'
  community.general.sefcontext:
    target: "{{ iobroker_root }}/healthcheck"
    setype: bin_t
    state: present

- name: Apply SELinux file context for the healthcheck script
  when: ansible_selinux.status != 'disabled'
  ansible.builtin.command:
    argv:
      - restorecon
      - -iv
      - "{{ iobroker_root }}/healthcheck"
  register: iobroker_restorecon_result
  changed_when: iobroker_restorecon_result.stdout | length > 0

- name: Update docker-compose images
  ansible.builtin.import_tasks:
    file: docker-compose-update.yml
  vars:
    directory: "{{ iobroker_root }}"
    pull: true
    build: true
    notify: Restart iobroker service # noqa: var-naming[no-reserved]

- name: Add vm.overcommit_memory sysctl for Redis
  ansible.posix.sysctl:
    name: vm.overcommit_memory
    value: "1"
    sysctl_file: /etc/sysctl.d/redis-vm.overcommit.conf
    sysctl_set: true
    state: present
    reload: true

- name: Symlink backup configuration
  ansible.builtin.file:
    state: link
    src: "{{ iobroker_root }}/backup.yaml"
    path: "/etc/borgmatic.d/{{ ansible_role_name }}.yaml"

- name: Install systemd units
  ansible.builtin.import_tasks: systemd-install-units.yml
  vars:
    directory: "{{ iobroker_root }}/systemd"
    local_units: templates/systemd
    notify: # noqa: var-naming[no-reserved]
      - Restart iobroker service
      - Restart iobroker healthcheck timer

- name: Start service
  ansible.builtin.systemd:
    state: started
    enabled: true
    name: "{{ item }}"
    daemon_reload: true
  loop: "{{ systemd_units_autostart }}"
  register: iobroker_started

- name: Register with loadbalancer
  ansible.builtin.import_tasks:
    file: register-with-loadbalancer.yml
