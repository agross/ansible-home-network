volumes:
  iobroker-data:

networks:
  default:
  {% if traefik_host | default(false) | bool %}
  web:
    external: true
  {% endif %}
  {% if iobroker_direct_network_access | default(false) | bool %}
  iobroker:
    name: iobroker
    driver: macvlan
    driver_opts:
      parent: {{ iobroker_network_interface }}
    internal: true
    ipam:
      config:
        - subnet: {{ network.ip4 }}
          ip_range: {{ iobroker_ip4_range | ansible.builtin.mandatory }}
  {% endif %}

services:
  redis:
    image: redis:alpine

    restart: unless-stopped
    environment:
      TZ: Europe/Berlin
    networks:
      default:
    command: /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - ./redis/data:/data
    healthcheck:
      test: redis-cli ping | grep -xq PONG
      start_period: 5s
      interval: 5s
    sysctls:
      net.core.somaxconn: 512

  app:
    image: {{ iobroker_image }}
    pull_policy: never
    build:
      context: ./iobroker/docker

    restart: unless-stopped
    env_file: ./iobroker/.env
    hostname: iobroker
    labels:
      traefik.enable: 'true'
      traefik.http.routers.iobroker.entrypoints: https
      traefik.http.routers.iobroker.rule: Host(`iobroker.{{ network.domain }}`)
      traefik.http.routers.iobroker.service: iobroker
      traefik.http.services.iobroker.loadbalancer.server.port: {{ iobroker_ports.iobroker }}
      {% if iobroker_ports.telegram is defined %}
      traefik.http.routers.iobroker-telegram.entrypoints: https
      traefik.http.routers.iobroker-telegram.rule: Host(`telegram.{{ network.domain }}`)
      traefik.http.routers.iobroker-telegram.service: iobroker-telegram
      traefik.http.services.iobroker-telegram.loadbalancer.serverstransport: no-verify@file
      traefik.http.services.iobroker-telegram.loadbalancer.server.port: {{ iobroker_ports.telegram }}
      traefik.http.services.iobroker-telegram.loadbalancer.server.scheme: https
      {% endif %}
      {% if iobroker_ports.lovelace is defined %}
      traefik.http.routers.iobroker-lovelace.entrypoints: https
      traefik.http.routers.iobroker-lovelace.rule: Host(`lovelace.{{ network.domain }}`)
      traefik.http.routers.iobroker-lovelace.service: iobroker-lovelace
      traefik.http.services.iobroker-lovelace.loadbalancer.server.port: {{ iobroker_ports.lovelace }}
      {% endif %}
      {% if iobroker_ports.lovelace_guests is defined %}
      traefik.http.routers.iobroker-lovelace-guests.entrypoints: https
      traefik.http.routers.iobroker-lovelace-guests.rule: Host(`gast.{{ network.domain }}`)
      traefik.http.routers.iobroker-lovelace-guests.service: iobroker-lovelace-guests
      traefik.http.services.iobroker-lovelace-guests.loadbalancer.server.port: {{ iobroker_ports.lovelace_guests }}
      # No access from outside this network or the home network.
      traefik.http.middlewares.iobroker-lovelace-guests-ipallowlist.ipallowlist.sourcerange:
        127.0.0.1/32, {{ network.ip4 }}, {{ network.ip6 }}, {{ hostvars['gateway-home'].network.ip4 }}, {{ hostvars['gateway-home'].network.ip6 }}, fe80::/10, fc00::/7
      traefik.http.routers.iobroker-lovelace-guests.middlewares:
        iobroker-lovelace-guests-ipallowlist
      {% endif %}
    networks:
      default:
      {% if traefik_host | default(false) | bool %}
      web:
      {% endif %}
      {% if iobroker_direct_network_access | default(false) | bool %}
      iobroker:
        ipv4_address: {{ iobroker_ip4 | ansible.builtin.mandatory }}
      {% endif %}
    volumes:
      - ./backups:/opt/iobroker/backups
      - iobroker-data:/opt/iobroker
      # Enable mirroring in the iobroker.javascript adapter and edit scripts via
      # SSH with e.g. VS Code.
      - ./scripts:/opt/iobroker/mirrored-scripts
    {% if iobroker_devices | length %}
    devices:
      {% for dev in iobroker_devices %}
      - {{ dev.host }}:{{ dev.container }}:rw
      {% endfor %}
    {% endif %}
    depends_on:
      redis:
        condition: service_healthy

  {% if iobroker_crunchfit_google_maps_api_key | default('', true) | length %}
  crunchfit:
    image: crunchfit
    pull_policy: never
    build:
      context: ./crunchfit/docker

    restart: unless-stopped
    env_file: ./crunchfit/.env
    networks:
      default:
    volumes:
      - /etc/localtime:/etc/localtime
  {% endif %}
