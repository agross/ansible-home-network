version: '2.4'

volumes:
  iobroker-data:

services:
  redis:
    image: redis:alpine

    environment:
      TZ: Europe/Berlin
    {% if iobroker_wake_on_lan | default(false) | bool == true %}
    ports:
      - "127.0.0.1:6379:6379"
    {% endif %}
    command: /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - ./redis/data:/data
    healthcheck:
      test: redis-cli -h localhost ping | grep -xq PONG || exit 1
      start_period: 5s
    sysctls:
      net.core.somaxconn: 512

  app:
    image: {{ iobroker_image }}
    build:
      context: ./iobroker/docker

    env_file: ./iobroker/.env
    hostname: iobroker
    {% if iobroker_wake_on_lan | default(false) | bool == true %}
    network_mode: host
    {% else %}
    ports:
      {% for service, port in ports.items() %}
      {% if port %}
      # {{ service }}
      - "{{ port }}:{{ port }}"
      {% endif %}
      {% endfor %}
    {% endif %}
    volumes:
      - iobroker-data:/opt/iobroker
    devices:
      {% set zigbees = iobroker_zigbee_transceiver.split(';') %}
      {% for dev in zigbees %}
      - "{{ dev }}:{{ dev }}:rw"
      {% endfor %}
    healthcheck:
      test: ["CMD", "wget", "--server-response", "--output-document", "/dev/null", "http://localhost:{{ ports.iobroker }}"]
      start_period: 15s
    # Required for the backup adapter in combination with NFS or CIFS.
    privileged: true
    depends_on:
      redis:
        condition: service_healthy
