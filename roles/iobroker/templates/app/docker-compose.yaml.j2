version: '2.4'

volumes:
  iobroker-data:

{% if traefik_domain | default('', true) | length  %}
networks:
  web:
    external: true
{% endif %}

services:
  redis:
    image: redis:alpine

    restart: unless-stopped
    environment:
      TZ: Europe/Berlin
    {% if iobroker_support_wake_on_lan | default(false) | bool %}
    ports:
      - "127.0.0.1:6379:6379"
    {% endif %}
    command: /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - ./redis/data:/data
    healthcheck:
      test: redis-cli -h localhost ping | grep -xq PONG || exit 1
      start_period: 5s
      interval: 5s
    sysctls:
      net.core.somaxconn: 512

  app:
    image: {{ iobroker_image }}
    pull_policy: never
    build:
      context: ./iobroker/docker

    restart: unless-stopped
    env_file: ./iobroker/.env
    hostname: iobroker
    {% if iobroker_support_wake_on_lan | default(false) | bool %}
    network_mode: host
    {% elif traefik_domain | default('', true) | length  %}
    labels:
      traefik.enable: 'true'
      traefik.http.routers.iobroker.entrypoints: https
      traefik.http.routers.iobroker.rule: Host(`iobroker.{{ traefik_domain }}`)
      traefik.http.routers.iobroker.service: iobroker
      traefik.http.services.iobroker.loadbalancer.server.port: 8081
      traefik.http.routers.iobroker-lovelace.entrypoints: https
      traefik.http.routers.iobroker-lovelace.rule: Host(`lovelace.{{ traefik_domain }}`)
      traefik.http.routers.iobroker-lovelace.service: iobroker-lovelace
      traefik.http.services.iobroker-lovelace.loadbalancer.server.port: 8091
      {% if iobroker_guest_access | default(false) | bool == true %}
      traefik.http.routers.iobroker-lovelace-guests.entrypoints: https
      traefik.http.routers.iobroker-lovelace-guests.rule: Host(`gast.{{ traefik_domain }}`)
      traefik.http.routers.iobroker-lovelace-guests.service: iobroker-lovelace-guests
      traefik.http.services.iobroker-lovelace-guests.loadbalancer.server.port: 8092
      {% endif %}
    networks:
      - default
      - web
    {% else %}
    ports:
      {% for service, port in iobroker_ports.items() %}
      {% if port %}
      # {{ service }}
      - "{{ port }}:{{ port }}"
      {% endif %}
      {% endfor %}
    {% endif %}
    volumes:
      - {{ root }}/backups:/opt/iobroker/backups
      - iobroker-data:/opt/iobroker
      # Enable mirroring in the iobroker.javascript adapter and edit scripts via
      # SSH with e.g. VS Code.
      - {{ root }}/scripts:/opt/iobroker/mirrored-scripts
    devices:
      {% set zigbees = iobroker_zigbee_transceiver.split(';') %}
      {% for dev in zigbees %}
      - "{{ dev }}:{{ dev }}:rw"
      {% endfor %}
    {% if iobroker_support_backup_on_nfs_or_cifs | default(true) %}
    # Required for the backup adapter in combination with NFS or CIFS.
    privileged: true
    {% endif %}
    depends_on:
      redis:
        condition: service_healthy

  {% if iobroker_needs_crunchfit | default(false) | bool %}
  crunchfit:
    image: crunchfit
    pull_policy: never
    build:
      context: ./crunchfit/docker

    restart: unless-stopped
    env_file: ./crunchfit/.env
    {% if iobroker_support_wake_on_lan | default(false) | bool %}
    ports:
      - "127.0.0.1:50000:5000"
    {% endif %}
    volumes:
      - /etc/localtime:/etc/localtime
  {% endif %}
