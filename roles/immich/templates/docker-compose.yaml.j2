services:
  server:
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
      - ./immich-config.json:/immich-config.json:ro
    env_file:
      - .env
    ports:
      - 127.0.0.1:2283:3001
    depends_on:
      - redis
      - db

  machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    volumes:
      - ml-model-cache:/cache
    env_file:
      - .env

  redis:
    image: redis:alpine
    volumes:
      - ./redis:/data
    healthcheck:
      test: redis-cli ping | grep -xq PONG
      start_period: 5s
      interval: 5s

  db:
    image: tensorchord/pgvecto-rs:pg16-v0.2.0
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: --locale-provider=icu --icu-locale=de-DE --data-checksums
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: >-
        psql --username="$$POSTGRES_USER" --dbname="$$POSTGRES_DB" --command='SELECT 1' || exit 1;
        failures="$$(psql --username="$$POSTGRES_USER" --dbname="$$POSTGRES_DB" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')";
        echo "Checksum failure count is $$failures";
        [ "$$failures" = 0 ] || exit 1
      start_interval: 5s
      start_period: 1m
      interval: 5m

volumes:
  db-data:
  ml-model-cache:
