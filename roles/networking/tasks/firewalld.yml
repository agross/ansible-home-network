- name: Ensure firewalld is installed
  ansible.builtin.package:
    name: firewalld
    state: present

- name: Ensure firewalld is started
  ansible.builtin.systemd_service:
    name: firewalld
    state: started

- name: Put interfaces in firewalld zones
  ansible.posix.firewalld:
    interface: "{{ item.value.device }}"
    zone: "{{ item.value.zone }}"
    immediate: true
    permanent: true
    state: enabled
  loop: "{{ interfaces | ansible.builtin.dict2items | selectattr('value.zone', 'defined') }}"
  loop_control:
    label: "{{ item.key }}: {{ item.value.device }} -> {{ item.value.zone }}"

- name: Add services
  ansible.posix.firewalld:
    zone: "{{ item.0.key }}"
    service: "{{ item.1 }}"
    immediate: true
    permanent: true
    state: enabled
  loop: >-
    {{
      firewalld.services |
        default({}) |
        ansible.builtin.dict2items |
        ansible.builtin.subelements('value')
    }}
  loop_control:
    label: "{{ item.0.key }}: {{ item.1 }}"

- name: Forward IPv4 ports # noqa args[module]
  ansible.posix.firewalld:
    zone: "{{ item.0.key }}"
    port_forward:
      - "{{ item.1 }}"
    immediate: true
    permanent: true
    state: enabled
  loop: >-
    {{
      firewalld.forward_ports |
        default({}) |
        ansible.builtin.dict2items |
        ansible.builtin.subelements('value')
    }}
  loop_control:
    label: "{{ item.0.key }}: {{ item.1 }}"

- name: Forward IPv6 ports / apply rich rules
  ansible.posix.firewalld:
    zone: "{{ item.0.key }}"
    rich_rule: "{{ item.1 }}"
    immediate: true
    permanent: true
    state: enabled
  loop: >-
    {{
      firewalld.rich_rules |
        default({}) |
        ansible.builtin.dict2items |
        ansible.builtin.subelements('value')
    }}
  loop_control:
    label: "{{ item.0.key }}: {{ item.1 }}"

- name: Copy policies
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: >-
      /etc/firewalld/policies/{{
        item.path |
        ansible.builtin.basename |
        ansible.builtin.regex_replace('\.j2$', '')
      }}
    owner: 0
    group: 0
    mode: "644"
  when: item.state == "file"
  loop: >-
    {{
      lookup("community.general.filetree",
             "templates/" ~ ansible_role_name ~ "/" ~
             inventory_hostname ~ "/firewalld",
             wantlist = true)
    }}
  loop_control:
    label: "{{ item.path }}"
  notify: Reload firewalld

- name: Ensure firewalld is running
  ansible.builtin.systemd:
    name: firewalld.service
    enabled: true
    state: started
