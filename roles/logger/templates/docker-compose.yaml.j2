version: '2.4'

volumes:
  influxdb-data:
  grafana-data:

networks:
{% if traefik_domain | default('', true) | length  %}
  web:
    external: true
{% endif %}
{% if iobroker_support_wake_on_lan | default(false) | bool == false %}
  iobroker_default:
    external: true
{% endif %}

services:
  influxdb:
    image: influxdb:{{ influxdb_version }}

    env_file: ./influxdb/.env
    {% if iobroker_support_wake_on_lan | default(false) | bool == false %}
    # Run on own logger network and the iobroker network so ioBroker can log
    # data without the need to publish the InfluxDB port.
    networks:
      - default
      - iobroker_default
    {% else %}
    ports:
      - 127.0.0.1:8086:8086
    {% endif %}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - influxdb-data:/var/lib/influxdb
    healthcheck:
      test: ["CMD", "wget", "--server-response", "--output-document", "/dev/null", "http://localhost:8086/ping"]
      start_period: 5s

  grafana:
    image: grafana/grafana

    env_file: ./grafana/.env
    {% if traefik_domain | default('', true) | length  %}
    labels:
      traefik.enable: 'true'
      traefik.http.routers.grafana.rule: Host(`grafana.{{ traefik_domain }}`)
      traefik.http.services.grafana.loadbalancer.server.port: 3000
    networks:
      - default
      - web
    {% else %}
    ports:
      - "3000:3000"
    {% endif %}
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - grafana-data:/var/lib/grafana
    healthcheck:
      test: ["CMD", "wget", "-S", "-O", "/dev/null", "http://localhost:3000"]
      start_period: 5s
    depends_on:
      influxdb:
        condition: service_healthy

  telegraf:
    image: telegraf
    privileged: true
    environment:
      HOST_ETC: /host/etc
      HOST_PROC: /host/proc
      HOST_SYS: /host/sys
    volumes:
      - {{ root }}/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - {{ root }}/telegraf/telegraf.d:/etc/telegraf/telegraf.d:ro
      # For host monitoring.
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc:/host/etc:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    command:
      --config-directory /etc/telegraf/telegraf.d
    depends_on:
      influxdb:
        condition: service_healthy
