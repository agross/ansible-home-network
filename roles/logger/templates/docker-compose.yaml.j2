volumes:
  influxdb2-config:
  influxdb2-data:
  grafana-data:

networks:
  default:
  {% if traefik_host | default(false) | bool %}
  web:
    external: true
  {% endif %}

services:
  influxdb:
    image: influxdb:2.7.12-alpine

    restart: unless-stopped
    environment:
      INFLUXD_LOG_LEVEL: error
      INFLUXD_REPORTING_DISABLED: true
    labels:
      traefik.enable: 'true'
      traefik.http.routers.influxdb.entrypoints: https
      traefik.http.routers.influxdb.rule: Host(`influxdb.{{ network.domain }}`)
      traefik.http.services.influxdb.loadbalancer.server.port: 8086
    {% if traefik_host %}
    networks:
      - default
      - web
    {% else %}
    ports:
      - "8086:8086"
    {% endif %}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./backups/influxdb:/backups
      - influxdb2-config:/etc/influxdb2
      - influxdb2-data:/var/lib/influxdb2
    healthcheck:
      test:
        - CMD
        - wget
        - --server-response
        - --output-document
        - /dev/null
        - http://localhost:8086/ping
      start_period: 30s
      interval: 5s

  grafana:
    image: grafana/grafana:12.2.1

    restart: unless-stopped
    environment:
      # The configuration values in the grafana.ini:
      # https://github.com/grafana/grafana/blob/main/conf/sample.ini
      # can be overridden by environment variables prefixed with "GF_", e.g.
      # GF_SECURITY_ADMIN_USER: not-admin
      GF_LOG_MODE: console
      GF_LOG_LEVEL: warn
      # GF_LOG_FILTERS: ngalert.notifier.telegram.client:debug

      GF_SERVER_ROOT_URL: https://{{ logger_grafana_domain | ansible.builtin.mandatory }}

      GF_SECURITY_ADMIN_PASSWORD: "{{ logger_grafana_admin_password }}"

      GF_USERS_ALLOW_SIGN_UP: false
      GF_USERS_ALLOW_ORG_CREATE: false

      GF_AUTH_LOGIN_MAXIMUM_INACTIVE_LIFETIME_DURATION: 30d

      {% if logger_grafana_google_client_id is defined %}
      GF_AUTH_GOOGLE_ENABLED: true
      GF_AUTH_GOOGLE_ALLOW_SIGN_UP: true
      GF_AUTH_GOOGLE_CLIENT_ID: {{ logger_grafana_google_client_id }}
      GF_AUTH_GOOGLE_CLIENT_SECRET: {{ logger_grafana_google_client_secret | ansible.builtin.mandatory }}
      {% if logger_grafana_google_allowed_domains is defined %}
      GF_AUTH_GOOGLE_ALLOWED_DOMAINS: {{ logger_grafana_google_allowed_domains }}
      {% endif %}
      {% endif %}

      {% if logger_grafana_smtp_user is defined %}
      GF_SMTP_ENABLED: true
      GF_SMTP_HOST: smtp-relay.gmail.com:587
      GF_SMTP_USER: {{ logger_grafana_smtp_user | ansible.builtin.mandatory }}
      GF_SMTP_PASSWORD: {{ logger_grafana_smtp_password | ansible.builtin.mandatory }}
      GF_SMTP_EHLO_IDENTITY: {{ logger_grafana_domain }}
      GF_SMTP_FROM_ADDRESS: grafana@{{ ansible_facts.hostname }}.{{ network.domain }}
      {% endif %}
    {% if traefik_host %}
    labels:
      traefik.enable: 'true'
      traefik.http.routers.grafana.entrypoints: https
      traefik.http.routers.grafana.rule: Host(`grafana.{{ network.domain }}`)
      traefik.http.services.grafana.loadbalancer.server.port: 3000
    networks:
      - default
      - web
    {% else %}
    ports:
      - "3000:3000"
    {% endif %}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - grafana-data:/var/lib/grafana
    healthcheck:
      test:
        - CMD
        - wget
        - -S
        - -O
        - /dev/null
        - http://localhost:3000
      start_period: 5s
      interval: 5s
    depends_on:
      influxdb:
        condition: service_healthy
