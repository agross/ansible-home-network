- name: Get version of the InfluxDB container
  community.docker.docker_container_info:
    name: "{{ logger_influxdb_migration_container }}"
  register: logger_influxdb_info

- name: Get InfluxDB version entry from environment
  when: logger_influxdb_info.exists and 'Env' in logger_influxdb_info.container.Config
  ansible.builtin.set_fact:
    logger_version_env_entry: >-
      {{
        logger_influxdb_info.container.Config.Env |
        select('match', 'INFLUXDB_VERSION=')
      }}

- name: Get InfluxDB version number from version entry
  when: logger_version_env_entry | default([], true) | length
  ansible.builtin.set_fact:
    logger_version_number: "{{ logger_version_env_entry | first | split('=') | last }}"

- name: Run upgrade
  when: >-
    logger_version_number is defined and
    not logger_version_number is version('2', '>=')
  block:
    - name: Make sure InfluxDB 2 volumes do not exist yet
      community.docker.docker_volume_info:
        name: "logger_influxdb2-{{ item }}"
      register: logger_influxdb_volume_info
      failed_when: logger_influxdb_volume_info.exists
      loop:
        - config
        - data

    - name: Fix permissions on the InfluxDB data volume
      community.docker.docker_container:
        image: busybox
        name: influxdb-1-upgrade-fix-perms
        auto_remove: true
        command_handling: correct
        command:
          - chown
          - -R
          - 1000:1000
          - /var/lib/influxdb
        detach: false
        interactive: false
        volumes_from: "{{ logger_influxdb_migration_container }}"

    - name: Create temporary directory to hold the entrypoint from InfluxDB 2
      ansible.builtin.tempfile:
        state: directory
        suffix: influxdb-entrypoint
      register: logger_influxdb_entrypoint

    - name: Extract entypoint from InfluxDB 2 image
      community.docker.docker_container:
        image: influxdb:alpine
        name: influxdb-1-upgrade-extract-entrypoint
        auto_remove: true
        command_handling: correct
        command:
          - cp
          - --
          - /entrypoint.sh
          - /extracted-entrypoint
        detach: false
        interactive: false
        mounts:
          - type: bind
            source: "{{ logger_influxdb_entrypoint.path }}"
            target: /extracted-entrypoint

    - name: Set entrypoint file name
      ansible.builtin.set_fact:
        logger_influxdb_entrypoint_file: >-
          {{ [logger_influxdb_entrypoint.path, 'entrypoint.sh'] | join('/') }}

    - name: Remove the requirement to run the InfluxDB 2 server after upgrading
      ansible.builtin.lineinfile:
        path: "{{ logger_influxdb_entrypoint_file }}"
        regexp: "{{ '^\\s*' ~ ('exec influxd \"${@}\"' | regex_escape) }}"
        state: absent
      register: logger_entrypoint_patched

    - name: Verify that the InfluxDB 2 entrypoint has been patched
      ansible.builtin.fail:
        msg: >-
          Unable to modify the InfluxDB 2 entrypoint at {{ logger_influxdb_entrypoint_file }}
          to not run InfluxDB 2 after upgrading data.
      when: logger_entrypoint_patched is not changed

    - name: Stop logger service
      ansible.builtin.systemd:
        name: logger
        state: stopped

    - name: Run migration
      community.docker.docker_container:
        image: influxdb:alpine
        name: influxdb-1-upgrade
        detach: false
        interactive: false
        env:
          DOCKER_INFLUXDB_INIT_MODE: upgrade
          DOCKER_INFLUXDB_INIT_USERNAME: "{{ logger_influxdb_init_user }}"
          DOCKER_INFLUXDB_INIT_PASSWORD: "{{ logger_influxdb_init_password }}"
          DOCKER_INFLUXDB_INIT_ORG: "{{ logger_influxdb_init_org }}"
          DOCKER_INFLUXDB_INIT_BUCKET: "{{ logger_influxdb_init_bucket }}"
          DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: "{{ logger_influxdb_init_admin_token }}"
        volumes_from: "{{ logger_influxdb_migration_container }}"
        mounts:
          - type: bind
            source: "{{ logger_influxdb_entrypoint_file }}"
            target: /entrypoint.sh
          - type: volume
            source: logger_influxdb2-config
            target: /etc/influxdb2
          - type: volume
            source: logger_influxdb2-data
            target: /var/lib/influxdb2
      register: logger_migration
      failed_when: "'Upgrade successfully completed' not in logger_migration.container.Output"

    - name: Remove migration container
      community.docker.docker_container:
        name: influxdb-1-upgrade
        state: absent
