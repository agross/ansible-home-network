- name: Stat docker socket
  ansible.builtin.stat:
    path: /var/run/docker.sock
  register: stat_docker_socket
  changed_when: false

- name: Get group owning the docker socket
  ansible.builtin.set_fact:
    docker_group: "{{ stat_docker_socket.stat.gid }}"

- import_tasks: copy-templates.yml
  vars:
    directory: ../templates
    notify:
      - Restart logger service
      - Restart logger backup timer

# Enable update with: ansible-playbook --extra-vars docker_update=42
- import_tasks: docker-compose-update.yml
  vars:
    directory: "{{ root }}"
    pull: "{{ docker_update is defined }}"
    build: "{{ docker_update is defined }}"
    notify:
      - Restart logger service
      - Restart logger backup timer

- name: Change permissions on backup script
  file:
    mode: '700'
    path: "{{ root }}/backup/backup"

- name: Get systemd unit files
  find:
    paths: "{{ root }}"
    file_type: file
    recurse: true
    patterns: '*.service,*.timer'
  register: systemd_units

- name: Symlink systemd unit files
  file:
    state: link
    src: "{{ item.path }}"
    path:
      /etc/systemd/system/{{ item.path | basename | regex_replace('^logger', service_name) }}
    force: true
  loop: "{{ systemd_units.files }}"
  loop_control:
    label: "{{ item.path }}"
  notify:
    - Restart logger service
    - Restart logger backup timer

- name: Symlink InfluxDB rename script
  file:
    state: link
    src: "{{ root }}/bin/influx-rename"
    path: /usr/local/bin/influx-rename

- name: Start service
  ansible.builtin.systemd:
    state: started
    enabled: true
    name: "{{ service_name }}.service"
    daemon_reload: true
  register: logger_started

- name: Start backup timer
  ansible.builtin.systemd:
    state: started
    enabled: true
    name: "{{ service_name }}-backup.timer"
    daemon_reload: true
  register: logger_backup_started

- name: Enable memory cgroups for running Telegraf
  block:
    - name: Check if memory cgroups are enabled
      command: grep -E '^memory\s+0' /proc/cgroups
      changed_when: false
      failed_when: false
      register: memory_cgroups_enabled

    - name: Create a backup of /boot/cmdline.txt
      copy:
        src: /boot/cmdline.txt
        remote_src: true
        dest: /boot/cmdline.txt.bak-cgroups-memory
        mode: preserve
        # Do not overwrite existing files.
        force: false
      when: memory_cgroups_enabled.rc == 0

    - name: Enable memory cgroups (cgroup_enable)
      include_tasks: boot-cmdline.yml
      vars:
        key: cgroup_enable
        value: memory
        update: false
      when: memory_cgroups_enabled.rc == 0

    - name: Enable memory cgroups (cgroup_memory)
      include_tasks: boot-cmdline.yml
      vars:
        key: cgroup_memory
        value: 1
        update: true
      when: memory_cgroups_enabled.rc == 0

    - name: Reboot
      reboot:
      when: memory_cgroups_enabled.rc == 0
