#!/usr/bin/env bash
# vim: set ft=jinja-shell ts=2 sw=2 et:

# Log outputs with:
#
# journalctl --follow --unit networkd-dispatcher.service

set -euo pipefail
shopt -s inherit_errexit

[[ "$IFACE" == {{ interfaces.telekom.device | mandatory | quote }} ]] || exit  0

# Redirect traffic incoming on $IFACE to $IFACE-ingress to shape it there.
# https://www.bufferbloat.net/projects/codel/wiki/CakeRecipes/
if [[ -z "$(tc filter show dev "$IFACE" ingress)" ]]; then
  printf 'Redirecting incoming traffic from %s to %s\n' "$IFACE" "$IFACE-ingress"
  tc filter add dev "$IFACE" \
            parent ffff: basic \
            action mirred egress redirect \
            dev "$IFACE-ingress"
fi

if sudo --user=ddclient -- ddclient -daemon=0 -debug -use=if -if="$IFACE"; then
  printf 'ddclient succeeded\n'
  exit
fi

printf 'ddclient failed, attempting manual DynDNS update\n'

resolve() {
  local host="${1?Need host to resolve}"

  if ! ip="$(dig +short @8.8.8.8 A "$host")" || [[ -z "$ip" ]]; then
    >&2 printf 'Could not resolve %s: %s\n' "$host" "$ip"
    return 1
  fi

  printf '%s' "$ip"
}

desec() {
  local host ip user url

  printf 'Updating deSEC...\n'

  host=update.dedyn.io
  ip="$(resolve "$host")"

  user={{ network.domain | ansible.builtin.mandatory | ansible.builtin.quote }}:{{ gateway_dyndns_password | ansible.builtin.mandatory | ansible.builtin.quote }}

  url="https://$host/nic/update?hostname={{ network.domain | ansible.builtin.mandatory }}&myipv6=preserve"

  output="$(curl --resolve "$host:443:$ip" \
                 --fail-with-body \
                 --connect-timeout 15 \
                 --user "$user" \
                 "$url")"

  printf '%s\n' "$output"

  if [[ "$output" == good || "$output" == nochg ]]; then
    printf 'Successfully updated deSEC IP\n'
  else
    printf 'Failed to update deSEC IP\n'
    return 1
  fi
}

tunnelbroker() {
  local host ip user url

  printf 'Updating Tunnelbroker...\n'

  host=ipv4.tunnelbroker.net
  ip="$(resolve "$host")"

  user={{ he_ipv6.username | ansible.builtin.mandatory | ansible.builtin.quote }}:{{ he_ipv6.update_key | ansible.builtin.mandatory | ansible.builtin.quote }}

  url="https://$host/nic/update?hostname={{ he_ipv6.tunnel_id | ansible.builtin.mandatory }}"

  output="$(curl --resolve "$host:443:$ip" \
                 --fail \
                 --connect-timeout 15 \
                 --user "$user" \
                 "$url")"

  printf '%s\n' "$output"

  if [[ "$output" == good* ]] || \
     [[ "$output" == nochg* ]]; then
    printf 'Successfully updated Tunnelbroker IP\n'
  else
    printf 'Failed to update Tunnelbroker IP\n'
    return 1
  fi
}

for provider in desec tunnelbroker; do
  while ((1)); do
    if $provider; then
      break
    else
      printf 'Sleeping...\n'
      sleep 5
    fi
  done
done
