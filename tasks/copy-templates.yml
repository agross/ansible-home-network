- name: Create directories
  ansible.builtin.file:
    path: "{{ target }}/{{ item.path }}"
    state: directory
    owner: "{{ files[item.path].owner | default(omit) }}"
    group: "{{ files[item.path].group | default(omit) }}"
    mode: "{{ files[item.path].mode | default('755', true) }}"
  vars:
    root_directory: >-
      {{
        {
          'path': ''
        }
      }}
  loop: >-
    {{
      [root_directory] +
      lookup('community.general.filetree',
             directory,
             wantlist = true) |
      selectattr('state', 'eq', 'directory')
    }}
  loop_control:
    label: "{{ item.path }}"
  notify: "{{ notify_ | default(omit) }}"

- name: Copy non-template files
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ target }}/{{ files[item.path].rename | default(item.path) }}"
    owner: "{{ files[item.path].owner | default(omit) }}"
    group: "{{ files[item.path].group | default(omit) }}"
    mode: "{{ files[item.path].mode | default('preserve', true) }}"
  loop: >-
    {{
      lookup('community.general.filetree',
             directory,
             wantlist = true) |
      selectattr('state', 'eq', 'file') |
      rejectattr('path', 'ansible.builtin.search', '\.j2$') |
      rejectattr('path', 'ansible.builtin.search', '/\.gitignore$')
    }}
  loop_control:
    label: "{{ item.path }}"
  notify: "{{ notify_ | default(omit) }}"

- name: Copy template files
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: >-
      {{
        target
      }}/{{
        files[item.path].rename |
        default(
          item.path | ansible.builtin.regex_replace('\.j2$', '')
        )
      }}
    owner: "{{ files[item.path].owner | default(omit) }}"
    group: "{{ files[item.path].group | default(omit) }}"
    mode: "{{ files[item.path].mode | default('preserve', true) }}"
    lstrip_blocks: true
  loop: >-
    {{
      lookup('community.general.filetree',
             directory,
             wantlist = true) |
      selectattr('state', 'eq', 'file') |
      selectattr('path', 'ansible.builtin.search', '\.j2$') |
      rejectattr('path', 'ansible.builtin.search', '/\.gitignore$')
    }}
  loop_control:
    label: "{{ item.path }}"
  notify: "{{ notify_ | default(omit) }}"
