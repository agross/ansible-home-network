- name: Set SELinux file contexts
  ansible.builtin.import_tasks: systemd-unit-file-contexts.yml

- name: Get systemd unit names
  ansible.builtin.set_fact:
    systemd_units: >-
      {{
        (
          lookup('ansible.builtin.fileglob',
                 local_units ~ '/*.service*',
                 wantlist = true) +
          lookup('ansible.builtin.fileglob',
                 local_units ~ '/*.timer*',
                 wantlist = true) +
          lookup('ansible.builtin.fileglob',
                 local_units ~ '/*.mount*',
                 wantlist = true) +
          lookup('ansible.builtin.fileglob',
                 local_units ~ '/*.target*',
                 wantlist = true)
        ) |
        map('basename') |
        map('regex_replace', '\.j2$', '')
      }}

- name: Get list of systemd units to autostart
  ansible.builtin.set_fact:
    systemd_units_autostart: >-
      {{
        systemd_units_autostart_yaml |
        ansible.builtin.from_yaml |
        default ([], true) |
        reject('regex', '\.mount$')
      }}
  vars:
    # Reject service units that have a timer unit with the same name.
    systemd_units_autostart_yaml: |
      ---
      {% for unit in systemd_units | default([]) %}
      {% set is_service = unit is ansible.builtin.regex('\.service$') %}
      {% set has_timer = systemd_units is ansible.builtin.contains(unit | ansible.builtin.regex_replace('\.service$', '.timer')) %}
      {% if not (is_service and has_timer) %}
      - {{ unit }}
      {% endif %}
      {% endfor %}

- name: Symlink systemd units
  ansible.builtin.file:
    state: link
    src: "{{ directory | ansible.builtin.mandatory }}/{{ item }}"
    path: "/etc/systemd/system/{{ item }}"
    force: true
  loop: "{{ systemd_units }}"
  notify: "{{ notify | default(omit) }}"
